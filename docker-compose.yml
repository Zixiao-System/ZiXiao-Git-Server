version: '3.8'

services:
  # ZiXiao Git Server
  git-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: zixiao-git-server
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./configs/server.yaml:/app/configs/server.yaml:ro
    environment:
      - JWT_SECRET=${JWT_SECRET:-change-me-in-production}
      - GIN_MODE=${GIN_MODE:-release}
      # Database configuration can be overridden via env vars
      - DB_TYPE=${DB_TYPE:-sqlite3}
      - DB_HOST=${DB_HOST:-}
      - DB_PORT=${DB_PORT:-}
      - DB_NAME=${DB_NAME:-}
      - DB_USER=${DB_USER:-}
      - DB_PASSWORD=${DB_PASSWORD:-}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - zixiao-network
    # Uncomment to use PostgreSQL
    # depends_on:
    #   - postgres
    # Uncomment to use SQL Server
    # depends_on:
    #   - sqlserver

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: zixiao-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx-prod.conf:/etc/nginx/conf.d/default.conf:ro
      - ./web/dist:/usr/share/nginx/html:ro
      - ./logs:/var/log/nginx
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - git-server
    networks:
      - zixiao-network

  # PostgreSQL (optional, use profile)
  postgres:
    image: postgres:15-alpine
    container_name: zixiao-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-zixiao_git}
      - POSTGRES_USER=${POSTGRES_USER:-zixiao}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-zixiao}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - zixiao-network
    profiles:
      - postgres

  # SQL Server (optional, use profile)
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: zixiao-sqlserver
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_SERVER_PASSWORD:-YourStrong!Password123}
      - MSSQL_PID=Developer
    volumes:
      - sqlserver-data:/var/opt/mssql
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "${SQL_SERVER_PASSWORD:-YourStrong!Password123}", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - zixiao-network
    profiles:
      - sqlserver

  # Redis (optional, for future caching)
  redis:
    image: redis:7-alpine
    container_name: zixiao-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - zixiao-network
    profiles:
      - redis

  # Adminer (database management UI)
  adminer:
    image: adminer:latest
    container_name: zixiao-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    networks:
      - zixiao-network
    profiles:
      - adminer

networks:
  zixiao-network:
    driver: bridge

volumes:
  postgres-data:
  sqlserver-data:
  redis-data:

